package crcl.base;

import org.checkerframework.checker.nullness.qual.Nullable;

class SettingsStatusType extends DataThingType {
    protected AngleUnitEnumType angleUnitName;
    protected List<ParameterSettingType> endEffectorParameterSetting;
    protected Double endEffectorSetting;
    protected ForceUnitEnumType forceUnitName;
    protected List<JointLimitType> jointLimits;
    @Nullable protected PoseToleranceType intermediatePoseTolerance;
    protected LengthUnitEnumType lengthUnitName;
    @Nullable protected PointType maxCartesianLimit;
    @Nullable protected PointType minCartesianLimit;
    @Nullable protected Boolean motionCoordinated;
    @Nullable protected PoseToleranceType poseTolerance;
    protected List<ParameterSettingType> robotParameterSetting;
    @Nullable protected RotAccelAbsoluteType rotAccelAbsolute;
    @Nullable protected RotAccelRelativeType rotAccelRelative;
    @Nullable protected RotSpeedAbsoluteType rotSpeedAbsolute;
    @Nullable protected RotSpeedRelativeType rotSpeedRelative;
    @Nullable protected TorqueUnitEnumType torqueUnitName;
    @Nullable protected TransAccelAbsoluteType transAccelAbsolute;
    @Nullable protected TransAccelRelativeType transAccelRelative;
    @Nullable protected TransSpeedAbsoluteType transSpeedAbsolute;
    @Nullable protected TransSpeedRelativeType transSpeedRelative;
    SettingsStatusType();
    AngleUnitEnumType getAngleUnitName();
    void setAngleUnitName(AngleUnitEnumType arg0);
    List<ParameterSettingType> getEndEffectorParameterSetting();
    @Nullable Double getEndEffectorSetting();
    void setEndEffectorSetting(Double arg0);
    @Nullable ForceUnitEnumType getForceUnitName();
    void setForceUnitName(ForceUnitEnumType arg0);
    List<JointLimitType> getJointLimits();
    @Nullable PoseToleranceType getIntermediatePoseTolerance();
    void setIntermediatePoseTolerance(PoseToleranceType arg0);
    LengthUnitEnumType getLengthUnitName();
    void setLengthUnitName(LengthUnitEnumType arg0);
    @Nullable PointType getMaxCartesianLimit();
    void setMaxCartesianLimit(PointType arg0);
    @Nullable PointType getMinCartesianLimit();
    void setMinCartesianLimit(PointType arg0);
    @Nullable Boolean isMotionCoordinated();
    void setMotionCoordinated(Boolean arg0);
    @Nullable PoseToleranceType getPoseTolerance();
    void setPoseTolerance(PoseToleranceType arg0);
    List<ParameterSettingType> getRobotParameterSetting();
    @Nullable RotAccelAbsoluteType getRotAccelAbsolute();
    void setRotAccelAbsolute(RotAccelAbsoluteType arg0);
    @Nullable RotAccelRelativeType getRotAccelRelative();
    void setRotAccelRelative(RotAccelRelativeType arg0);
    @Nullable RotSpeedAbsoluteType getRotSpeedAbsolute();
    void setRotSpeedAbsolute(RotSpeedAbsoluteType arg0);
    @Nullable RotSpeedRelativeType getRotSpeedRelative();
    void setRotSpeedRelative(RotSpeedRelativeType arg0);
    @Nullable TorqueUnitEnumType getTorqueUnitName();
    void setTorqueUnitName(TorqueUnitEnumType arg0);
    @Nullable TransAccelAbsoluteType getTransAccelAbsolute();
    void setTransAccelAbsolute(TransAccelAbsoluteType arg0);
    @Nullable TransAccelRelativeType getTransAccelRelative();
    void setTransAccelRelative(TransAccelRelativeType arg0);
    @Nullable TransSpeedAbsoluteType getTransSpeedAbsolute();
    void setTransSpeedAbsolute(TransSpeedAbsoluteType arg0);
    @Nullable TransSpeedRelativeType getTransSpeedRelative();
    void setTransSpeedRelative(TransSpeedRelativeType arg0);
}
