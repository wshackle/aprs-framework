/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aprs.framework;

import java.io.File;
import java.io.IOException;
import java.util.List;

/**
 *
 * @author Will Shackleford {@literal <william.shackleford@nist.gov>}
 */
public class ActionsToCrclJInternalFrame extends javax.swing.JInternalFrame  implements ActionsToCrclDisplayInterface{

    /**
     * Creates new form ActionsToCrclJInternalFrame
     */
    public ActionsToCrclJInternalFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        actionsToCrclJPanel1 = new aprs.framework.ActionsToCrclJPanel();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("PDDL Actions to CRCL (Executor)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(actionsToCrclJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(actionsToCrclJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void browseActionsFile() throws IOException {
        this.actionsToCrclJPanel1.browseActionsFile();
    }

    @Override
    public List<PddlAction> getActionsList() {
        return this.actionsToCrclJPanel1.getActionsList();
    }

    @Override
    public void setActionsList(List<PddlAction> actionsList) {
        this.actionsToCrclJPanel1.setActionsList(actionsList);
    }

    @Override
    public void addAction(PddlAction action) {
        this.actionsToCrclJPanel1.addAction(action);
    }

    @Override
    public File getPropertiesFile() {
        return this.actionsToCrclJPanel1.getPropertiesFile();
    }

    @Override
    public void setPropertiesFile(File propertiesFile) {
        this.actionsToCrclJPanel1.setPropertiesFile(propertiesFile);
    }

    @Override
    public void saveProperties() throws IOException {
        this.actionsToCrclJPanel1.saveProperties();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private aprs.framework.ActionsToCrclJPanel actionsToCrclJPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void loadProperties() throws IOException {
        this.actionsToCrclJPanel1.loadProperties();
    }

    @Override
    public void autoResizeTableColWidthsPddlOutput() {
        this.actionsToCrclJPanel1.autoResizeTableColWidthsPddlOutput();
    }

    @Override
    public boolean isLoadEnabled() {
        return actionsToCrclJPanel1.isLoadEnabled();
    }

    @Override
    public void setLoadEnabled(boolean enable) {
        actionsToCrclJPanel1.setLoadEnabled(enable);
    }
}
