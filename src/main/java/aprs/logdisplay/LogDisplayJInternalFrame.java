/*
 * This software is public domain software, however it is preferred
 * that the following disclaimers be attached.
 * Software Copyright/Warranty Disclaimer
 * 
 * This software was developed at the National Institute of Standards and
 * Technology by employees of the Federal Government in the course of their
 * official duties. Pursuant to title 17 Section 105 of the United States
 * Code this software is not subject to copyright protection and is in the
 * public domain.
 * 
 * This software is experimental. NIST assumes no responsibility whatsoever 
 * for its use by other parties, and makes no guarantees, expressed or 
 * implied, about its quality, reliability, or any other characteristic. 
 * We would appreciate acknowledgement if the software is used. 
 * This software can be redistributed and/or modified freely provided 
 * that any derivative works bear some notice that they are derived from it, 
 * and any modified versions bear some notice that they have been modified.
 * 
 *  See http://www.copyright.gov/title17/92chap1.html#105
 * 
 */
package aprs.logdisplay;

import aprs.misc.Utils;
import org.checkerframework.checker.guieffect.qual.UIEffect;

/**
 *
 * @author Will Shackleford {@literal <william.shackleford@nist.gov>}
 */
@SuppressWarnings("serial")
public class LogDisplayJInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form LodDisplayJInternalFrame
     */
    @SuppressWarnings({"nullness","initialization"})
    @UIEffect
    public LogDisplayJInternalFrame() {
        initComponents();
    }

    public void appendText(String s) {
        logDisplayJPanel1.appendText(s);
    }

    @UIEffect
    public void appendTextOnDisplay(String text) {
        logDisplayJPanel1.appendTextOnDisplay(text);
    }

    private void clearText() {
        logDisplayJPanel1.clearText();
    }

    @Override
    public void dispose() {
        clearText();
        logDisplayJPanel1.setParentVisible(false);
        Utils.runOnDispatchThread(() -> super.dispose());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    @UIEffect
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logDisplayJPanel1 = new aprs.logdisplay.LogDisplayJPanel();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Error/Info Log");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeactivated(evt);
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeiconified(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameIconified(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logDisplayJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logDisplayJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @UIEffect
    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        logDisplayJPanel1.setParentVisible(false);
    }//GEN-LAST:event_formInternalFrameClosed

    @UIEffect
    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        logDisplayJPanel1.setParentVisible(this.isVisible() && !this.isIcon && !this.isClosed);
    }//GEN-LAST:event_formInternalFrameActivated

    @UIEffect
    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
       logDisplayJPanel1.setParentVisible(false);
    }//GEN-LAST:event_formInternalFrameClosing

    @UIEffect
    private void formInternalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeactivated
       logDisplayJPanel1.setParentVisible(false);
    }//GEN-LAST:event_formInternalFrameDeactivated

    @UIEffect
    private void formInternalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeiconified
       logDisplayJPanel1.setParentVisible(this.isVisible() && !this.isIcon && !this.isClosed);
    }//GEN-LAST:event_formInternalFrameDeiconified

    @UIEffect
    private void formInternalFrameIconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameIconified
        logDisplayJPanel1.setParentVisible(false);
    }//GEN-LAST:event_formInternalFrameIconified

    @UIEffect
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         logDisplayJPanel1.setParentVisible(this.isVisible() && !this.isIcon && !this.isClosed);
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private aprs.logdisplay.LogDisplayJPanel logDisplayJPanel1;
    // End of variables declaration//GEN-END:variables
}
