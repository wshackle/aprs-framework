<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.wshackle</groupId>
    <artifactId>aprs-framework</artifactId>
    <version>1.9.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.class>aprs.launcher.PreCheckLauncher</main.class>
        <exec.mainClass>${main.class}</exec.mainClass>
        <optiplanner.version>7.24.0.Final</optiplanner.version>
        <crcl4java.version>1.9.1-SNAPSHOT</crcl4java.version>
        <checker-framework.version>3.1.1</checker-framework.version>
        <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    <name>aprs-framework</name>
    <url>
        https://www.nist.gov/programs-projects/agility-performance-robotic-systems
    </url>
    <description>
        Framework for the Agility Performance of Robotic Systems(APRS) an experimental
        research project by the National Institute of Standards and Technology(NIST).
    </description>
    
    <repositories>
        <!-- This forces the maven central url to be https: instead of http:
        which is necessary if using an old version maven after the 
        repository was changed in January 2020. -->
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        
        <!-- <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </repository>
        -->
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </pluginRepository>
    </pluginRepositories>
    
    <licenses>
        <license>
            <name>Public Domain(US Government Work)</name>
            <url>http://www.copyright.gov/title17/92chap1.html#105</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>wshackle</id>
            <name>Will Shackleford</name>
            <email>william.shackleford@nist.gov</email>
            <url>https://github.com/wshackle</url>
            <organization>NIST</organization>
            <organizationUrl>http://www.nist.gov</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>America/New_York</timezone>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:https://github.com/wshackle/aprs-framework.git</connection>
        <developerConnection>scm:git:https://github.com/wshackle/aprs-framework.git</developerConnection>
        <!-- <developerConnection>scm:git:git@github.com:usnistgov/crcl.git</developerConnection> -->
        <url>https://github.com/wshackle/aprs-framework</url>
        <tag>aprs-framework-1.0</tag>
    </scm>
    
    
    <dependencies>
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-jdbc-driver</artifactId>
            <version>3.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections-api</artifactId>
            <version>9.0.0</version>
        </dependency>

        
        <dependency>
            <groupId>com.ghgande</groupId>
            <artifactId>j2mod</artifactId>
            <version>2.5.0</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections</artifactId>
            <version>9.0.0</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.jcodec</groupId>
            <artifactId>jcodec</artifactId>
            <version>0.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.jcodec</groupId>
            <artifactId>jcodec-javase</artifactId>
            <version>0.2.2</version>
        </dependency>
        
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>crcl4java-base</artifactId>
            <version>${crcl4java.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>crcl4java-utils</artifactId>
            <version>${crcl4java.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>crcl4java-ui</artifactId>
            <version>${crcl4java.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.wshackle</groupId>
            <artifactId>rcslib</artifactId>
            <version>2017.07.19</version>
        </dependency>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.54</version>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.8</version>
        </dependency>
        <dependency>
            <groupId>org.optaplanner</groupId>
            <artifactId>optaplanner-core</artifactId>
            <version>${optiplanner.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.optaplanner</groupId>
            <artifactId>optaplanner-benchmark</artifactId>
            <version>${optiplanner.version}</version>
        </dependency>


        <!-- Annotations from the Checker Framework: nullness, interning, locking, ... -->
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <!-- Use checker-qual7 if targeting Java 7 -->
            <!-- <artifactId>checker-qual7</artifactId> -->
            <version>${checker-framework.version}</version>
        </dependency>
                
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.2.3</version>
        </dependency>
        
    </dependencies>
    <build>
        
        <!-- SKIP SETTING UP FILTERING LIKE THIS IF YOU USE THE GENERATE FILE MODE :-) -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.txt</include>
                    <include>**/*.drl</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.scss</include>
                    <include>**/*.jpg</include>
                    <include>**/*.png</include>
                    <include>**/*.wav</include>
                    <include>**/*.ico</include>
                    <include>**/*.jpeg</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>install_zip</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${project.build.directory}/libs
                                    </outputDirectory>
                                    <useBaseVersion>false</useBaseVersion>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.1.2</version>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <classpathPrefix>libs/</classpathPrefix>
                                    <mainClass>
                                        ${main.class}
                                    </mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </plugin>
                
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.1.1</version>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly/dist.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- mvn -Dprofile.release  to activate this and the release,jar-with_depends profile. -->
            <!--  <activation>
                <property>
                    <name>profile.release</name>
                </property>
            </activation> -->
            <id>jar-with-depends</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.1.1</version>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>${main.class}</mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id> <!-- this is used for inheritance merges -->
                                <phase>package</phase> <!-- bind to the packaging phase -->
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile> 
        
        <profile>
            <id>windows_with_gpg4win</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>
                                gpg2.exe
                            </executable>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>buildnumber</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <version>1.4</version>
                        <executions>
                            <execution>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>create-metadata</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <attach>true</attach>
                            <!--make it available for jar/war classpath resource -->
                            <addOutputDirectoryToResources>true</addOutputDirectoryToResources>
                            <doCheck>false</doCheck>
                            <doUpdate>false</doUpdate>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jgit_buildnumber</id>
            <build>
                <plugins>
                    <!-- enable JGit plugin -->
                    <plugin>
                        <groupId>ru.concerteza.buildnumber</groupId>
                        <artifactId>maven-jgit-buildnumber-plugin</artifactId>
                        <version>1.2.9</version>
                        <executions>
                            <execution>
                                <id>git-buildnumber</id>
                                <goals>
                                    <goal>extract-buildnumber</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin> 
            
                    <!-- specify manifest fields -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.0.2</version>
                        <configuration>
                            <archive>
                                <!--suppress  MavenModelInspection -->
                                <manifestEntries>
                                    <Specification-Title>${project.name}</Specification-Title>
                                    <Specification-Version>${project.version}</Specification-Version>
                                    <Specification-Vendor>${project.specification_vendor}</Specification-Vendor>
                                    <Implementation-Title>${project.groupId}.${project.artifactId}</Implementation-Title>
                                    <Implementation-Version>${git.revision}</Implementation-Version>
                                    <Implementation-Vendor>${project.implementation_vendor}</Implementation-Vendor>
                                    <X-Git-Branch>${git.branch}</X-Git-Branch>
                                    <X-Git-Tag>${git.tag}</X-Git-Tag>
                                    <X-Git-Commits-Count>${git.commitsCount}</X-Git-Commits-Count>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>owasp_dep_check</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>3.0.2</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native_installer</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                    
                            <execution>
                                <id>deploy_native</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>
                                        ${java.home}/../bin/javapackager
                                    </executable>
 
                                    <arguments>
                                        <argument>-deploy</argument>
                                        <argument>-native</argument>
                                        <argument>installer</argument>
                                        <argument>-appclass</argument>
                                        <argument>${main.class}</argument>
                                        <argument>-srcfiles</argument>
                                        <argument>
                                            ${project.build.directory}/${project.build.finalName}-jar-with-dependencies.jar
                                        </argument>
                                        <argument>-outdir</argument>
                                        <argument>./target</argument>
                                        <argument>-name</argument>
                                        <argument>${project.artifactId}</argument>
                                        <argument>-outfile</argument>
                                        <argument>
                                            ${project.build.finalName}
                                        </argument>
                                        <argument>-v</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>verbose_javac</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <compilerArgs>
                                <arg>-Xlint:all</arg>
                                <arg>-Werror</arg>
                                <arg>-parameters</arg>
                            </compilerArgs>
                        </configuration> 
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>checkerframework_jdk8</id>
            <dependencies>
                <dependency>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker</artifactId>
                    <version>${checker-framework.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>jdk8</artifactId>
                    <version>${checker-framework.version}</version>
                </dependency>
                <dependency>
                    <groupId>com.google.errorprone</groupId>
                    <artifactId>javac</artifactId>
                    <version>9+181-r4173-1</version>
                </dependency>
            </dependencies>
            <properties>
                <!-- These properties will be set by the Maven Dependency plugin -->
                <annotatedJdk>${org.checkerframework:jdk8:jar}</annotatedJdk>
                <errorProneJavac>${com.google.errorprone:javac:jar}</errorProneJavac>
                <!-- Uncomment to use the Type Annotations compiler. -->
                <!-- <typeAnnotationsJavac>${org.checkerframework:compiler:jar}</typeAnnotationsJavac> -->
            </properties>
            
            <build>
                <plugins>
                    <plugin>
                        <!-- For checker framework , http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#maven -->
                        <!-- This plugin will set properties values using dependency information -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven-dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>properties</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
            
            
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <fork>true</fork>
                            <!-- If using JDK 8, add source and target. -->
                            <source>1.8</source>
                            <target>1.8</target>
                            <!-- If using JDK 11, remove source and target and uncomment "release" below. -->
                            <!-- <release>11</release> -->
                            <compilerArguments>
                                <Xmaxerrs>10000</Xmaxerrs>
                                <Xmaxwarns>10000</Xmaxwarns>
                            </compilerArguments>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.checkerframework</groupId>
                                    <artifactId>checker</artifactId>
                                    <version>${checker-framework.version}</version>
                                </path>
                            </annotationProcessorPaths>
                            <annotationProcessors>
                                <!-- Add all the checkers you want to enable here -->
                                <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
                            </annotationProcessors>
                            <compilerArgs>
                                <!-- If using JDK 8, use only the two arguments immediately below. -->
                                <arg>-J-Xbootclasspath/p:${errorProneJavac}</arg>
                                <arg>-Xbootclasspath/p:${annotatedJdk}</arg>
                                <arg>-parameters</arg>
                                <!-- If using JDK 11, remove the two arguments above, remove the
                                space in the one below, and uncomment it. -->
                                <!-- <arg>-J- -add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg> -->

                                <!-- Optionally, -Awarns turns type-checking errors into warnings. -->
                                <!-- <arg>-Awarns</arg> -->
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>checkerframework_jdk11</id>
            <dependencies>
                <dependency>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker</artifactId>
                    <version>${checker-framework.version}</version>
                </dependency>
            </dependencies>
            <properties>
                <!-- These properties will be set by the Maven Dependency plugin -->
                <!-- <annotatedJdk>${org.checkerframework:jdk8:jar}</annotatedJdk> -->
                <!-- <errorProneJavac>${com.google.errorprone:javac:jar}</errorProneJavac> -->
                <!-- Uncomment to use the Type Annotations compiler. -->
                <!-- <typeAnnotationsJavac>${org.checkerframework:compiler:jar}</typeAnnotationsJavac> -->
            </properties>
            
            <build>
                <plugins>
                    <plugin>
                        <!-- For checker framework , http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#maven -->
                        <!-- This plugin will set properties values using dependency information -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven-dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>properties</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
            
            
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <fork>false</fork>
                            <!-- If using JDK 8, add source and target. -->
                            <!--<source>1.8</source>  -->
                            <!--<target>1.8</target>  -->
                            <!-- If using JDK 11, remove source and target and uncomment "release" below. -->
                            <release>11</release> 
                            <compilerArguments>
                                <Xmaxerrs>10000</Xmaxerrs>
                                <Xmaxwarns>10000</Xmaxwarns>
                            </compilerArguments>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.checkerframework</groupId>
                                    <artifactId>checker</artifactId>
                                    <version>${checker-framework.version}</version>
                                </path>
                            </annotationProcessorPaths>
                            <annotationProcessors>
                                <!-- Add all the checkers you want to enable here -->
                                <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
                            </annotationProcessors>
                            <compilerArgs>
                                <!-- If using JDK 8, use only the two arguments immediately below. -->
                                <!-- <arg>-J-Xbootclasspath/p:${errorProneJavac}</arg>  -->
                                <!--  <arg>-Xbootclasspath/p:${annotatedJdk}</arg>  -->
                                <!-- If using JDK 11, remove the two arguments above, remove the
                                space in the one below, and uncomment it. -->
                                <arg>-J- -add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                                <arg>-AstubDebug</arg>
                                <arg>-parameters</arg>
                                <!-- Optionally, -Awarns turns type-checking errors into warnings. -->
                                <!-- <arg>-Awarns</arg> -->
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>jdpa_listen_not_true</id>
            <activation>
                <property>
                    <name>jpda.listen</name>
                    <value>!true</value>
                </property>
            </activation>
            <properties>
                <custom.nb.exec.args>-ea -agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n ${exec.args}</custom.nb.exec.args>
            </properties>
        </profile>
        
        <profile>
            <id>jdpa_listen_true</id>
            <activation>
                <property>
                    <name>jpda.listen</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <custom.nb.exec.args>
                    ${exec.args}
                </custom.nb.exec.args>
            </properties>
        </profile>
        <profile>
            <id>custom_nb_exec</id>
            <activation>
                <property>
                    <name>env.NB_EXEC_MAVEN_PROCESS_UUID</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <executions>
                            <execution>
                                <id>default-cli</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${exec.executable}</executable>
                                    <commandlineArgs>
                                        ${custom.nb.exec.args}
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>add_run_deps</id>
            <dependencies>
                <dependency>
                    <groupId>com.ati-ia</groupId>
                    <artifactId>ATINetFT</artifactId>
                    <version>1.0</version>
                    <optional>true</optional>
                    <scope>runtime</scope>
                    <!-- 
          Download jar from 
              
              https://www.ati-ia.com/Library/software/net_ft/ATINetFT.jar
              
              or from the webpage on the device itself.
        
              Or get the source and compile from
        
              https://www.ati-ia.com/Library/software/net_ft/src.zip
              
              
              On Windows PC OPTIMUS install with this command(Paths will differ on other computers)
        
        SET  JAVA_HOME=C:\Users\Public\Documents\Downloaded_Tools\AdoptOpenJDK\jdk-11.0.2+7
        C:\Users\Public\Documents\Downloaded_Tools\ApacheNetbeans10.0\netbeans\java\maven\bin\mvn.cmd install:install-file -Dfile=C:\Users\Public\Documents\Downloaded_Tools\ATINetFT.jar -DgroupId=com.ati-ia -DartifactId=ATINetFT -Dversion=1.0 -Dpackaging=jar
                  
                    -->
           
                </dependency>
                <dependency>
                    <groupId>com.github.wshackle</groupId>
                    <artifactId>ATINetFT_proxy</artifactId>
                    <version>${crcl4java.version}</version>
                    <optional>true</optional>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>fanucCRCLServer</artifactId>
                    <version>${crcl4java.version}</version>
                    <optional>true</optional>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>crcl4java-motoman</artifactId>
                    <version>${crcl4java.version}</version>
                    <optional>true</optional>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
